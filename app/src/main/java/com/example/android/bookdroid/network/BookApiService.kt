package com.example.android.bookdroid

import com.squareup.moshi.Moshi
import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory
import okhttp3.OkHttpClient
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.scalars.ScalarsConverterFactory
import retrofit2.http.*
import java.util.concurrent.TimeUnit


private const val BASE_URL = "https://openlibrary.org/"

/**
 * Build the Moshi object that Retrofit will be using, making sure to add the Kotlin adapter for
 * full Kotlin compatibility.
 */
private val moshi = Moshi.Builder()
    .add(KotlinJsonAdapterFactory())
    .build()

var okHttpClient = OkHttpClient.Builder()
    .connectTimeout(1, TimeUnit.MINUTES)
    .readTimeout(30, TimeUnit.SECONDS)
    .writeTimeout(15, TimeUnit.SECONDS)
    .build()

/**
 * Use the Retrofit builder to build a retrofit object using a Moshi converter with our Moshi
 * object.
 */
private val retrofit = Retrofit.Builder()
    .addConverterFactory(ScalarsConverterFactory.create())
    .baseUrl(BASE_URL)
    .client(okHttpClient)
    .build()

/**
 * A public interface that exposes the [getProperties] method
 */
interface BookApiService {
    /**
     * Returns a Coroutine [List] of [MarsProperty] which can be fetched with await() if
     * in a Coroutine scope.
     * The @GET annotation indicates that the "realestate" endpoint will be requested with the GET
     * HTTP method
     */
    @GET("api/books?bibkeys=ISBN:9783775705813,ISBN:3832191321,ISBN:8806566067,ISBN:085331893,ISBN:085331392,ISBN:0810913135,ISBN:1556601263,ISBN:0226033848,ISBN:9780618758920,ISBN:9781406733174,ISBN:1580819532,ISBN:9783791311227,ISBN:8834317335,ISBN:9798540447898,ISBN:0143037528,ISBN:9781497317857,ISBN:2266198351,ISBN:171744962,ISBN:9798624112490,ISBN:9780710064387&jscmd=data&format=json")
    fun getArtBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0603559433,ISBN:0688040578,ISBN:9781616570972,ISBN:0874495873,ISBN:9780836808810,ISBN:9780688123239,ISBN:9781842557860,ISBN:0439482739,ISBN:9780142407639,ISBN:0553055275,ISBN:1404827021,ISBN:076364109,ISBN:1406340243,ISBN:9780670867264,ISBN:4805312610,ISBN:0553055275,ISBN:0553055275,ISBN:190682391,ISBN:9781906823917,ISBN:9781412733182&jscmd=data&format=json")
    fun getFunBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0449214923,ISBN:9789628930098,ISBN:9780697360700,ISBN:1602060746,ISBN:9782092543030,ISBN:0143111884,ISBN:0714503916,ISBN:1415942668,ISBN:9780613140980,ISBN:9781665182768,ISBN:9877390655,ISBN:9780143056966,ISBN:9781427277879,ISBN:0534593925,ISBN:1595407081,ISBN:0743571789,ISBN:070110788,ISBN:000654746,ISBN:0916870480,ISBN:0393964698&jscmd=data&format=json")
    fun getSelfHelpBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780198651024,ISBN:0353088714,ISBN:9781478209522,ISBN:0371050286,ISBN:9780548108208,ISBN:1404320954,ISBN:9780801007293,ISBN:9780679413349,ISBN:1536146145,ISBN:0192835319,ISBN:9781101116029,ISBN:9798485740924,ISBN:9780789467225,ISBN:9781534716209,ISBN:9780665288432,ISBN:9780674677302,ISBN:9781781394823,ISBN:9781434618832,ISBN:9798734432815,ISBN:1426420927&jscmd=data&format=json")
    fun getBiographyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:2211220592,ISBN:2253060356,ISBN:9875800023,ISBN:9604102125,ISBN:2228881945,ISBN:9780451166364,ISBN:9780785729044,ISBN:2714436390,ISBN:9780789703217,ISBN:1854770039,ISBN:0205195717,ISBN:1663627193,ISBN:9780671666064,ISBN:9780801826597,ISBN:9780812860733,ISBN:9780141360461,ISBN:3787310274,ISBN:0385351399,ISBN:0060002093,ISBN:9780812428087&jscmd=data&format=json")
    fun getMemoriesBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:1466493283,ISBN:9798451770344,ISBN:1973549530,ISBN:9789994289738,ISBN:9798664038842,ISBN:1785435353,ISBN:1547064986,ISBN:9780735105959,ISBN:9781619824737,ISBN:0824014111,ISBN:9780451524508,ISBN:1570421269,ISBN:9781434615459,ISBN:9787536671805,ISBN:1721713662,ISBN:1439501661,ISBN:0460872583,ISBN:0883012197,ISBN:9780671471132,ISBN:9798475563236&jscmd=data&format=json")
    fun getScienceFictionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780330238458,ISBN:9781600964718,ISBN:1587159740,ISBN:9798499574140,ISBN:9780809572151,ISBN:9781248931462,ISBN:9798653366529,ISBN:1102111783,ISBN:9780665586040,ISBN:9780006740360,ISBN:9780140319378,ISBN:1502897199,ISBN:0848807049,ISBN:9781793976840,ISBN:9781617200908,ISBN:9780027587708,ISBN:9798747400474,ISBN:9781695280748,ISBN:9789681513139,ISBN:1561797863&jscmd=data&format=json")
    fun getFantasyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0435150634,ISBN:2040040730,ISBN:9781406733174,ISBN:9780160471612,ISBN:9780929524375,ISBN:9780543885982,ISBN:9781421241340,ISBN:9780160458637,ISBN:1536146145,ISBN:9781434610065,ISBN:9355756801,ISBN:0460871544,ISBN:9798540447898,ISBN:9789584300577,ISBN:9780679642176,ISBN:9782911416132,ISBN:9782253067207,ISBN:9789571344584,ISBN:1420954229,ISBN:3598716877&jscmd=data&format=json")
    fun getEducationBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798422702657,ISBN:2843043085,ISBN:9781691805501,ISBN:1654463604,ISBN:9798473945751,ISBN:9798543853788,ISBN:1466493283,ISBN:9798483726548,ISBN:9781795329262,ISBN:1535523778,ISBN:9798536184608,ISBN:9798796190852,ISBN:9798507516018,ISBN:555163048,ISBN:9780141033501,ISBN:9780809120963,ISBN:9781793976840,ISBN:9798750954872,ISBN:9780307122247,ISBN:9781565115477&jscmd=data&format=json")
    fun getFictionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798594081468,ISBN:1850894035,ISBN:9783596124442,ISBN:9781421838212,ISBN:9798683244422,ISBN:1419178679,ISBN:9780788502866,ISBN:9798646037542,ISBN:9781434618832,ISBN:9785224048076,ISBN:9798756699531,ISBN:9788817152334,ISBN:9780330238458,ISBN:9798734432815,ISBN:9788475670669,ISBN:1587159740,ISBN:1435348303,ISBN:9780810984097,ISBN:9780371850435,ISBN:9381608504&jscmd=data&format=json")
    fun getLiteratureBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780665561566,ISBN:0449214923,ISBN:0865970084,ISBN:0256105766,ISBN:0659029952,ISBN:9780118009324,ISBN:0143037528,ISBN:0848228103,ISBN:9780665565762,ISBN:9780471195078,ISBN:0460007750,ISBN:9782247004560,ISBN:9780471694724,ISBN:0446677450,ISBN:9780619160500,ISBN:9780101360524,ISBN:9780073368696,ISBN:8423349551,ISBN:0321125924,ISBN:0116216859&jscmd=data&format=json")
    fun getFinanceBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0100221831,ISBN:0446677450,ISBN:0330520989,ISBN:0273756001,ISBN:0739314645,ISBN:9781557756817,ISBN:9781134408214,ISBN:9780324561265,ISBN:0590292978,ISBN:9780030980664,ISBN:9781568959696,ISBN:9780446613378,ISBN:9781573928915,ISBN:9780393062458,ISBN:0321033876,ISBN:0415400031,ISBN:9789998416277,ISBN:9781612680200,ISBN:0743420373,ISBN:0812929640&jscmd=data&format=json")
    fun getInvestmentBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798594081468,ISBN:1483706516,ISBN:1473888808,ISBN:1726726894,ISBN:0395909716,ISBN:9780867206173,ISBN:9780786161065,ISBN:0141881267,ISBN:0685349209,ISBN:9780674990807,ISBN:9780786159093,ISBN:9780548108208,ISBN:0665414447,ISBN:9780460000147,ISBN:9781781394823,ISBN:9781404307513,ISBN:9781584777632,ISBN:9787208033986,ISBN:5280009318,ISBN:9780872204904&jscmd=data&format=json")
    fun getHistoryBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0256105766,ISBN:9781568653068,ISBN:9781439531914,ISBN:0451035402,ISBN:9788599296202,ISBN:9780619160500,ISBN:0141315482,ISBN:9780062227201,ISBN:073140985,ISBN:9781118967751,ISBN:8758804110,ISBN:9780072358575,ISBN:1260548007,ISBN:9780199186686,ISBN:8423349551,ISBN:9780030247880,ISBN:6047703739,ISBN:9780471552581,ISBN:9782738206619,ISBN:9780789703217&jscmd=data&format=json")
    fun getComputingBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0102237948,ISBN:1785435353,ISBN:0143037528,ISBN:9780330341882,ISBN:0100221831,ISBN:9780834300064,ISBN:2724271645,ISBN:9780132304610,ISBN:0712676902,ISBN:9788599296202,ISBN:0104077964,ISBN:9780716660019,ISBN:061333633,ISBN:0345468260,ISBN:9780062227201,ISBN:073140985,ISBN:9781118967751,ISBN:8467216891,ISBN:9780141353463,ISBN:9780349122847&jscmd=data&format=json")
    fun getTechnologyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780140319378,ISBN:0856921920,ISBN:0756982863,ISBN:3737360804,ISBN:9782070513741,ISBN:9780216893443,ISBN:9780723249023,ISBN:9783806742312,ISBN:0226033848,ISBN:9780571331512,ISBN:0517614502,ISBN:9798479373961,ISBN:9782010020056,ISBN:9780721431970,ISBN:9789681513139,ISBN:1789550610,ISBN:9781405661560,ISBN:0786117869,ISBN:1721165142,ISBN:9798830410052&jscmd=data&format=json")
    fun getChildrenBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798526944380,ISBN:9798801863542,ISBN:9798575224211,ISBN:9798631387737,ISBN:1790897548,ISBN:1690701919,ISBN:169374645,ISBN:9798787391473,ISBN:9798777614773,ISBN:0486145700,ISBN:1428089918,ISBN:9798507516018,ISBN:9798472241670,ISBN:9781661403416,ISBN:9798473681703,ISBN:1594565007,ISBN:9798474141985,ISBN:9780821721933,ISBN:1592249248,ISBN:9780061738449&jscmd=data&format=json")
    fun getMysteryBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:1535523778,ISBN:9798801863542,ISBN:9798575224211,ISBN:555163048,ISBN:9780141033501,ISBN:9798473945751,ISBN:9798483726548,ISBN:9798763634716,ISBN:1594565007,ISBN:9798515999308,ISBN:1466493283,ISBN:9781793976840,ISBN:9789571344584,ISBN:2266198351,ISBN:9798503793437,ISBN:9798522620462,ISBN:9782013220460,ISBN:9780330284141,ISBN:0062302671,ISBN:9780701112585&jscmd=data&format=json")
    fun getSuspenseBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798483726548,ISBN:9798683244422,ISBN:9798461754150,ISBN:167886658,ISBN:9798504538327,ISBN:1587159740,ISBN:9798728648727,ISBN:9781595470652,ISBN:0679640010,ISBN:9782253060482,ISBN:9798796190852,ISBN:9781420948622,ISBN:9798503793437,ISBN:1933499230,ISBN:9798763634716,ISBN:3815419328,ISBN:1521559708,ISBN:8842500631,ISBN:0811210707,ISBN:9780452004368&jscmd=data&format=json")
    fun getRomanceNovelBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9798485740924,ISBN:1557424012,ISBN:9781153738453,ISBN:0824014111,ISBN:9780804204897,ISBN:9781101116029,ISBN:9798734432815,ISBN:9798463152411,ISBN:9780929524375,ISBN:9780912422862,ISBN:0665141599,ISBN:5280009318,ISBN:0043310184,ISBN:9780872207172,ISBN:1582343802,ISBN:9781975902087,ISBN:9780521394031,ISBN:9789682940415,ISBN:8382652387,ISBN:9798716928619&jscmd=data&format=json")
    fun getReligionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:1374872075,ISBN:9780912422862,ISBN:9781846857836,ISBN:9781478209522,ISBN:1420954229,ISBN:9798485740924,ISBN:9780801007293,ISBN:9789504915164,ISBN:9781101116029,ISBN:1557424012,ISBN:1582343802,ISBN:8382652387,ISBN:0312114680,ISBN:0785260714,ISBN:9780353606913,ISBN:2266198351,ISBN:8690108548,ISBN:1412113512,ISBN:9780943217185,ISBN:9780394480848&jscmd=data&format=json")
    fun getSpiritualityBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780160458637,ISBN:9780118009324,ISBN:9780333521984,ISBN:082405931,ISBN:9780824059316,ISBN:0946495033,ISBN:9783442411429,ISBN:1697874398,ISBN:0404078222,ISBN:9781259751257,ISBN:9781259706608,ISBN:9780080522296,ISBN:0857521136,ISBN:9780341712794,ISBN:3882260920,ISBN:0470170174,ISBN:1854772295,ISBN:0134385454,ISBN:0205195717,ISBN:9780080562131&jscmd=data&format=json")
    fun getHealthBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9781975949433,ISBN:9780397321650,ISBN:9780140016987,ISBN:0001382012,ISBN:9780307207395,ISBN:9780808538165,ISBN:1591127963,ISBN:9781931514002,ISBN:9780746048054,ISBN:9788804491590,ISBN:9788700382817,ISBN:0786866268,ISBN:1447921364,ISBN:9781406263213,ISBN:9780802134974,ISBN:0415116465,ISBN:0606304886,ISBN:9780062252753,ISBN:0807830895,ISBN:9780900821349&jscmd=data&format=json")
    fun getLifeStyleBooks(): Call<String>

    @GET("api/books?jscmd=data&format=json")
    fun getBook(@Query("bibkeys") isbnQuery: String): Call<String>

    @Streaming
    @GET
    suspend fun downloadFile(@Url fileUrl:String): Response<ResponseBody>
}

/**
 * A public Api object that exposes the lazy-initialized Retrofit service
 */
object BookApi {
    val retrofitService : BookApiService by lazy { retrofit.create(BookApiService::class.java) }
    fun moshiService(): Moshi? {return moshi};
}