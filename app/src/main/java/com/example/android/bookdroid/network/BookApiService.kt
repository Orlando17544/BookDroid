package com.example.android.bookdroid

import com.squareup.moshi.Moshi
import com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory
import okhttp3.OkHttpClient
import okhttp3.ResponseBody
import retrofit2.Call
import retrofit2.Response
import retrofit2.Retrofit
import retrofit2.converter.scalars.ScalarsConverterFactory
import retrofit2.http.*
import java.util.concurrent.TimeUnit


private const val BASE_URL = "https://openlibrary.org/"

/**
 * Build the Moshi object that Retrofit will be using, making sure to add the Kotlin adapter for
 * full Kotlin compatibility.
 */
private val moshi = Moshi.Builder()
    .add(KotlinJsonAdapterFactory())
    .build()

var okHttpClient = OkHttpClient.Builder()
    .connectTimeout(1, TimeUnit.MINUTES)
    .readTimeout(30, TimeUnit.SECONDS)
    .writeTimeout(15, TimeUnit.SECONDS)
    .build()

/**
 * Use the Retrofit builder to build a retrofit object using a Moshi converter with our Moshi
 * object.
 */
private val retrofit = Retrofit.Builder()
    .addConverterFactory(ScalarsConverterFactory.create())
    .baseUrl(BASE_URL)
    .client(okHttpClient)
    .build()

/**
 * A public interface that exposes the [getProperties] method
 */
interface BookApiService {
    /**
     * Returns a Coroutine [List] of [MarsProperty] which can be fetched with await() if
     * in a Coroutine scope.
     * The @GET annotation indicates that the "realestate" endpoint will be requested with the GET
     * HTTP method
     */

    @GET("api/books?bibkeys=ISBN:0160408490,ISBN:0160446678,ISBN:159116060X,ISBN:0810969181,ISBN:0275466509,ISBN:0892070447,ISBN:0892070099,ISBN:0892072636,ISBN:0160446694,ISBN:1892850060,ISBN:9251058660,ISBN:0892071273,ISBN:0404048153,ISBN:0892070676,ISBN:0892071176,ISBN:0665256574,ISBN:0665387830,ISBN:0665050550,ISBN:9780486837635,ISBN:0881883751&jscmd=data&format=json")
    fun getArtBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0061374350,ISBN:0486242013,ISBN:0665592264,ISBN:0665546114,ISBN:0665567634,ISBN:0665535627,ISBN:066560968X,ISBN:0665520336,ISBN:0665520301,ISBN:0665781830,ISBN:0665563167,ISBN:0385129009,ISBN:0665532385,ISBN:0665532431,ISBN:0665539495,ISBN:9780867198522,ISBN:9788123021287,ISBN:0665810563,ISBN:016043677X,ISBN:9788123019512&jscmd=data&format=json")
    fun getFunBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0888681984,ISBN:0396020623,ISBN:0911662391,ISBN:0805812369,ISBN:0778504980,ISBN:0160408490,ISBN:0140138390,ISBN:0160440513,ISBN:0912394080,ISBN:978-1-911529-09-5,ISBN:0807733369,ISBN:0665792506,ISBN:9780679890683,ISBN:0665328206,ISBN:0665042647,ISBN:066524519X,ISBN:0866982426,ISBN:0665033168,ISBN:0665928963,ISBN:0665897308&jscmd=data&format=json")
    fun getSelfHelpBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665487231,ISBN:0853060932,ISBN:0403002265,ISBN:0665442564,ISBN:066533110X,ISBN:0665066325,ISBN:0665770693,ISBN:0665154402,ISBN:0665425066,ISBN:0674990358,ISBN:0665787138,ISBN:8123003692,ISBN:1892850060,ISBN:0665050143,ISBN:0892070617,ISBN:0403003970,ISBN:0665269579,ISBN:066527467X,ISBN:0665156618,ISBN:0665756089&jscmd=data&format=json")
    fun getBiographyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:1565299329,ISBN:0675205409,ISBN:0520205839,ISBN:0805812369,ISBN:0672215004,ISBN:0665254253,ISBN:0665043384,ISBN:0665255152,ISBN:0665059175,ISBN:0665067046,ISBN:066511768X,ISBN:0665228910,ISBN:0665083238,ISBN:020169963X,ISBN:0659903210,ISBN:0665031521,ISBN:0665013965,ISBN:0665103662,ISBN:0895880156,ISBN:0665910541,ISBN:0665938497&jscmd=data&format=json")
    fun getMemoriesBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665037597,ISBN:0665789637,ISBN:9781907727337,ISBN:0665422962,ISBN:0853060932,ISBN:0665334893,ISBN:0833400169,ISBN:0665290381,ISBN:029270769X,ISBN:0706607724,ISBN:0394527380,ISBN:8845402304,ISBN:1931520003,ISBN:0670910570,ISBN:0774102004,ISBN:1573180602,ISBN:0441690505,ISBN:029270769X,ISBN:0665294719,ISBN:0665116683&jscmd=data&format=json")
    fun getScienceFictionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665789645,ISBN:0333290631,ISBN:0688115586,ISBN:066578967X,ISBN:0665789637,ISBN:0345335686,ISBN:0665773234,ISBN:0665037597,ISBN:0665335717,ISBN:9781907727337,ISBN:066532216X,ISBN:0833400169,ISBN:0006755151,ISBN:0345258320,ISBN:029270769X,ISBN:0665117361,ISBN:1587155486,ISBN:0665290411,ISBN:0448137267,ISBN:0440484839&jscmd=data&format=json")
    fun getFantasyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0160446678,ISBN:9781907727337,ISBN:0665540655,ISBN:0393954358,ISBN:0665573731,ISBN:0665257953,ISBN:0160446694,ISBN:0140367594,ISBN:0879682019,ISBN:0665293194,ISBN:0020136609,ISBN:9780618268429,ISBN:0665271069,ISBN:0665150407,ISBN:066557388X,ISBN:0665045468,ISBN:0856649171,ISBN:0665813732,ISBN:0665085850,ISBN:9780511693311&jscmd=data&format=json")
    fun getEducationBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0333290631,ISBN:9781775419785,ISBN:0665269609,ISBN:0665789645,ISBN:0665773234,ISBN:0665335717,ISBN:0665037597,ISBN:0665325908,ISBN:0684717581,ISBN:0665789637,ISBN:0665767757,ISBN:0665070160,ISBN:0665487231,ISBN:0345335686,ISBN:0659903644,ISBN:0723206007,ISBN:0665714157,ISBN:066578967X,ISBN:0665664494,ISBN:9780008167035,ISBN:0688115586&jscmd=data&format=json")
    fun getFictionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9781775419785,ISBN:0665269609,ISBN:0665037597,ISBN:9780008167035,ISBN:0665714157,ISBN:0665789637,ISBN:0345335686,ISBN:0659903644,ISBN:0665773234,ISBN:0688115586,ISBN:0665785194,ISBN:0665335717,ISBN:0665070160,ISBN:0665936354,ISBN:0665422962,ISBN:9781907727337,ISBN:0684717581,ISBN:0665767757,ISBN:0853060932,ISBN:0665746628&jscmd=data&format=json")
    fun getLiteratureBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665561563,ISBN:0659029235,ISBN:0665540655,ISBN:0665573731,ISBN:0665257953,ISBN:066513469X,ISBN:0665497024,ISBN:0665187041,ISBN:0160476097,ISBN:0160463947,ISBN:0160406439,ISBN:0665204264,ISBN:0665131380,ISBN:0665286457,ISBN:0665128681,ISBN:0665134150,ISBN:0160440513,ISBN:0665043163,ISBN:0665081022,ISBN:0665260504&jscmd=data&format=json")
    fun getFinanceBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0104777958,ISBN:0870340840,ISBN:0665138229,ISBN:0160441625,ISBN:066524567X,ISBN:0160460816,ISBN:0665245114,ISBN:185628199X,ISBN:0160416647,ISBN:0160471028,ISBN:0665143982,ISBN:0665143974,ISBN:0665143966,ISBN:0160470064,ISBN:0659910667,ISBN:016043534X,ISBN:0160432340,ISBN:0665137672,ISBN:0160463289,ISBN:066503931X,ISBN:0665762097&jscmd=data&format=json")
    fun getInvestmentBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665325908,ISBN:0665773234,ISBN:0665037597,ISBN:0665422962,ISBN:0853060932,ISBN:0665487231,ISBN:0665785194,ISBN:0684717581,ISBN:0665936354,ISBN:0160408490,ISBN:0665335881,ISBN:0665666160,ISBN:066532216X,ISBN:0665793693,ISBN:0393954358,ISBN:0403002265,ISBN:071342821X,ISBN:0665000391,ISBN:0665119607,ISBN:0665282362&jscmd=data&format=json")
    fun getHistoryBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:1565299329,ISBN:012012114X,ISBN:0937175145,ISBN:9781584885511,ISBN:093717534X,ISBN:0387110461,ISBN:0-937175-35-8,ISBN:0596002890,ISBN:0750653728,ISBN:0-937175-26-9,ISBN:0471128457,ISBN:0931988403,ISBN:156881092X,ISBN:9781593279509,ISBN:8493298220,ISBN:9780312624989,ISBN:9780596529826,ISBN:0201065150,ISBN:0160765439,ISBN:0215083830&jscmd=data&format=json")
    fun getComputingBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0102205930,ISBN:0104777958,ISBN:0104790962,ISBN:1565299329,ISBN:012012114X,ISBN:9251058660,ISBN:0102057966,ISBN:0309028892,ISBN:0750653728,ISBN:9780300124873,ISBN:0080325777,ISBN:0113219091,ISBN:010224801X,ISBN:0824753178,ISBN:0486217094,ISBN:9781118749760,ISBN:0665071736,ISBN:8493298220,ISBN:0415241332,ISBN:9780470688755&jscmd=data&format=json")
    fun getTechnologyBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:066578967X,ISBN:0723206007,ISBN:0659903644,ISBN:0345335686,ISBN:0688115586,ISBN:0665789637,ISBN:0665936354,ISBN:0665767757,ISBN:0395643740,ISBN:0665793693,ISBN:0723206201,ISBN:0140367594,ISBN:066591668X,ISBN:0808552929,ISBN:0665269579,ISBN:0665320922,ISBN:9780679890683,ISBN:0723205671,ISBN:0665254091,ISBN:0665085850&jscmd=data&format=json")
    fun getChildrenBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665664494,ISBN:0665070160,ISBN:0665767757,ISBN:0665335717,ISBN:9780008167035,ISBN:0665714157,ISBN:0665269609,ISBN:0665037597,ISBN:0665664478,ISBN:066526965X,ISBN:065990764X,ISBN:0665660839,ISBN:0665289839,ISBN:066566415X,ISBN:0665383347,ISBN:0091127602,ISBN:0706607724,ISBN:0665898932,ISBN:066566656X,ISBN:0665790694,ISBN:9781539988243,ISBN:0156551640&jscmd=data&format=json")
    fun getMysteryBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9780008167035,ISBN:066526965X,ISBN:0665667590,ISBN:0785800883,ISBN:0786890029,ISBN:0665767722,ISBN:0312974191,ISBN:9780008167035,ISBN:0665269609,ISBN:0665010745,ISBN:066526965X,ISBN:0665095430,ISBN:0091127602,ISBN:0665726279,ISBN:0665021526,ISBN:0786890029,ISBN:0312974191,ISBN:0060565527,ISBN:0665344384,ISBN:0805811826&jscmd=data&format=json")
    fun getSuspenseBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:9781775419785,ISBN:9780008167035,ISBN:0684717581,ISBN:0665785194,ISBN:0665793855,ISBN:0192818422,ISBN:066526965X,ISBN:0665290381,ISBN:0665270135,ISBN:029270769X,ISBN:0665269676,ISBN:0860688232,ISBN:0684148145,ISBN:0665039883,ISBN:9781525286582,ISBN:0665722125,ISBN:0665264763,ISBN:0665085982,ISBN:8423968731,ISBN:0665026587&jscmd=data&format=json")
    fun getRomanceNovelBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0665422962,ISBN:0160408490,ISBN:2253004219,ISBN:9780879520380,ISBN:9040056102,ISBN:1587155486,ISBN:0486210626,ISBN:0665497024,ISBN:0042000033,ISBN:0665244444,ISBN:0060892579,ISBN:0665561555,ISBN:0524006970,ISBN:0665491891,ISBN:0684150263,ISBN:0665189109,ISBN:0790590387,ISBN:0665134541,ISBN:0790561042,ISBN:0842601635&jscmd=data&format=json")
    fun getReligionBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0524004110,ISBN:9781907727337,ISBN:9780879520380,ISBN:0665257953,ISBN:0524017751,ISBN:0790588633,ISBN:0665189109,ISBN:0665294719,ISBN:0385025440,ISBN:066557388X,ISBN:0006281141,ISBN:0665561679,ISBN:083705687X,ISBN:0223976172,ISBN:0665537662,ISBN:079058980X,ISBN:0060730579,ISBN:9781532658501,ISBN:0665516975,ISBN:0665939043&jscmd=data&format=json")
    fun getSpiritualityBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0160446678,ISBN:9780879520380,ISBN:0160446694,ISBN:9789251058428,ISBN:0160476097,ISBN:0160446058,ISBN:0405044704,ISBN:0160463947,ISBN:0665267142,ISBN:010201499X,ISBN:0837123097,ISBN:066515738X,ISBN:0855984694,ISBN:0113219091,ISBN:0665414889,ISBN:066529977X,ISBN:9780071600323,ISBN:0215005228,ISBN:0215250117,ISBN:0100215858&jscmd=data&format=json")
    fun getHealthBooks(): Call<String>

    @GET("api/books?bibkeys=ISBN:0855984694,ISBN:9780071600323,ISBN:0853060932,ISBN:0665650000,ISBN:0321501071,ISBN:9781459038363,ISBN:0665084684,ISBN:0673131017,ISBN:0665169310,ISBN:0665748655,ISBN:0665133200,ISBN:0665118996,ISBN:0665263651,ISBN:0665285280,ISBN:0665298587,ISBN:0665928238,ISBN:0911662006,ISBN:066502813X,ISBN:0665041063,ISBN:0665081316&jscmd=data&format=json")
    fun getLifeStyleBooks(): Call<String>

    @GET("api/books?jscmd=data&format=json")
    fun getBook(@Query("bibkeys") isbnQuery: String): Call<String>

    @Streaming
    @GET
    suspend fun downloadFile(@Url fileUrl:String): Response<ResponseBody>
}

/**
 * A public Api object that exposes the lazy-initialized Retrofit service
 */
object BookApi {
    val retrofitService : BookApiService by lazy { retrofit.create(BookApiService::class.java) }
    fun moshiService(): Moshi? {return moshi};
}